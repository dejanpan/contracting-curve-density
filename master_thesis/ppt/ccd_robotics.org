#+LaTeX_CLASS: beamer
#+TITLE: Implementation of Contracting Curve Density Algorithm for Applications in Personal Robotics
#+OPTIONS: toc:2
#+AUTHOR: Shulei Zhu
#+LaTeX_CLASS_OPTIONS: [english,10pt,presentation]
#+BEAMER_FRAME_LEVEL: 2
#+BEAMER_HEADER_EXTRA: \usetheme{dimilar}\usecolortheme{rose}
#+COLUMNS: %35ITEM %10BEAMER_env(Env) %10BEAMER_envargs(Args) %4BEAMER_col(Col) %8BEAMER_extra(Ex)
#+LaTeX_Header:\usepackage{algorithmic}
#+LaTeX_Header:\usepackage{algorithm}

* Motivation
** Motivation
*** Some challenging tasks in personal robotics                :B_alertblock:
    :PROPERTIES:
    :BEAMER_env: alertblock
    :END:
**** Image segmentation
**** Pose estimation
**** Object recognition and tracking

*** Model-base method                                               :B_block:
    :PROPERTIES:
    :BEAMER_env: block
    :END:
**** require much information external to the image 
**** Curve-fitting: a crucial part of these problems
*** Requirements                                             :B_exampleblock:
    :PROPERTIES:
    :BEAMER_env: exampleblock
    :END:
**** Robustness: stable even in the presence of heavy texture, clutter, poor contrast, partial occlusion
**** Accuracy: high sub-pixel accuracy
**** Efficiency: time-constrained, limited computer hardware resources in personal robotics
# ** The Contracting Curve Density (CCD) Algorithm
# # *** Bayesian Logistic Regression
# # **** A supervised machine learning problem
# # **** Logistic regression is a linear probabilistic discriminative model
# * Outline of the talk
# ** Outline of the talk
* How the original CCD algorithm works?
** How the original CCD algorithm works?
*** Flowchart of the CCD algorithm                     :BMCOL:B_exampleblock:
    :PROPERTIES:
    :BEAMER_col: 0.4
    :BEAMER_env: exampleblock
    :END:
#+CAPTION: the CCD algorithm
   #+LABEL:   fig: flowchart
   #+ATTR_LaTeX: width=4cm,angle=0
   [[./flowchart.jpg]]
*** Basic steps of the CCD algorithm                   :B_exampleblock:BMCOL:
    :PROPERTIES:
    :BEAMER_env: exampleblock
    :BEAMER_col: 0.6
    :END:
\begin{enumerate}
\item <1-> Contour initialization : initialize the model parameter vector
$\Phi$ (6-DOF or 8-DOF) and covariance matrix $\Sigma_{\Phi}$
\item <2-> Learning of local statistics : evaluate the likelihood; build
the cost function 
\item <3-> Refinement of model parameters : Maximize the cost function
using optimization algorithms
\item <4-> Check for convergence, if not, go to Step 2
\end{enumerate}
###shape-space, contour initialization, local statistics, optimization
** Sketch of the CCD algorithm
#+CAPTION: The contour of a pan
     #+LABEL:   fig:contour
     #+ATTR_LaTeX: width=6cm,angle=0
     [[./pan_contour.jpg]]
** An alternative view of the CCD algorithm
*** A classification problem                                 :B_exampleblock:
    :PROPERTIES:
    :BEAMER_env: exampleblock
    :END:
#+CAPTION: A classification problem   \cite{prml}
    #+LABEL:   fig:class
    #+ATTR_LaTeX: width=7cm,angle=0
    [[./classification.png]]

** An alternative view of the CCD algorithm
*** Probit regression                                        :B_exampleblock:
    :PROPERTIES:
    :BEAMER_env: exampleblock
    :END:
**** Evaluation of conditional distribution $p(\Phi|\mathbf{I})$
\begin{displaymath}
p(\Phi|\mathbf{I})
\propto \underbrace{p(\mathbf{I}|\mathbf{m}_{\Phi},
\Sigma_{\Phi})}_{\mathrm{local\ statistics}}\quad\times\quad
\underbrace{p(\Phi)}_{\mathrm{prior\ distribution}}
\end{displaymath}
Local statistics (likelihood): a probit function with
respect to $\Phi$
**** Goal: MAP (maximum a posteriori probability) solution of cost function $\mathcal{Q}(\Phi)$
\begin{displaymath}
\mathcal{Q}(\Phi) = \underset{\Phi}{\arg\max}\ \mathrm{ln}(p(\Phi|\mathbf{I}))
\end{displaymath}
Approach: iterative reweighted least  squares (IRLS) e.g. Gaussian
Newton method, Gradient decent and SVM Least Squares.

# * Related work
# ** 3-4 papers
* Improvements of the original algorithm
** Quadratic and Cubic B-spline curves
*** B-spline curves                      :B_exampleblock:
    :PROPERTIES:
    :BEAMER_env: exampleblock
    :END:
\begin{equation*}
  \mathbf{C}(u) =  \sum_{i=0}^{m-n-2} P_{i} B_{i,n}(u) \mbox{ , } u \in [u_{n},u_{m-n-1}]
\end{equation*}
#+CAPTION: B-spline curves of degree = 1, 2, 3
#+LABEL:   fig: bspline
#+ATTR_LaTeX: width=6cm,angle=0
[[./bspline.jpg]]

** Logistic and Probit function
*** Logistic function                                  :BMCOL:B_exampleblock:
    :PROPERTIES:
    :BEAMER_col: 0.5
    :BEAMER_env: exampleblock
    :BEAMER_envargs: <1->
    :END:
#+CAPTION: Logistic function
    #+LABEL:   fig:log
    #+ATTR_LaTeX: width=4cm,angle=0
    [[./logistic.jpg]]
\begin{displaymath}
f(\cdot) = \frac{1}{1+\mathrm{e}^{-x}}
\end{displaymath}
*** Probit function                                    :BMCOL:B_exampleblock:
    :PROPERTIES:
    :BEAMER_col: 0.5
    :BEAMER_env: exampleblock
    :BEAMER_envargs: <2->
    :END:
#+CAPTION: Probit function
    #+LABEL:   fig: probit
    #+ATTR_LaTeX: width=4cm,angle=0
    [[./erf.jpg]]
\begin{displaymath}
f(\cdot) = \frac{1}{2}(\frac{1}{\sqrt{2}}erf(x) + 1)
\end{displaymath}

** Logistic and Probit function
#+CAPTION: Probit function is highly sensitive for outliers \cite{prml}
    #+LABEL:   fig:class
    #+ATTR_LaTeX: width=7cm,angle=0
    [[./outliers.png]]
** Three-dimensional Affine Shape-space
*** Parallax effect in two-dimensional affine shape-space     :BMCOL:B_block:
    :PROPERTIES:
    :BEAMER_col: 0.5
    :BEAMER_env: block
    :END:
#+CAPTION: Parallax effect
    #+LABEL:   fig:parallax effect
    #+ATTR_LaTeX: width=3cm,angle=0
    [[./planar.jpg]]
*** Three-dimensional affine shape-space                      :BMCOL:B_block:
    :PROPERTIES:
    :BEAMER_col: 0.5	
    :BEAMER_env: block
    :END:
#+CAPTION: Three-dimensional affine shape-space
    #+LABEL:   fig:3das
    #+ATTR_LaTeX: width=3cm,angle=0
    [[./nonplanar.jpg]]
** Automated initialization methods (I)
*** Initialization from SIFT Features                               :B_block:
    :PROPERTIES:
    :BEAMER_env: block
    :END:
#+CAPTION: Initialization from SIFT Features
    #+LABEL:   fig:sift
    #+ATTR_LaTeX: width=6cm,angle=0
    [[./sift.jpg]]

** Automated initialization methods (II)
*** Initialization from projection of point clouds onto the image   :B_block:
    :PROPERTIES:
    :BEAMER_env: block
    :END:
#+CAPTION: Initialization from projection of point clouds onto the image
    #+LABEL:   fig:sift
    #+ATTR_LaTeX: width=6cm,angle=0
    [[./pr2b.jpg]]
* The CCD tracker
** Contracting Curve Density (CCD) Tracker 
  \begin{algorithm}[H]
    \caption{Contracting Curve Density (CCD) tracker}
    \begin{algorithmic}[1]
      \STATE $\Phi \gets 0$
      \STATE $\mathbf{C} \gets contour\_initialization()$
      \WHILE{$NewFrame$}
	\STATE $ \mathbf{I} \gets pre\_processing()$
	\STATE $ \mathbf{C} \gets contour\_distortion(\Phi)$
        \STATE $\Sigma \gets covariance\_initialization()$
	\STATE $\Phi \gets \Phi^{\mathrm{old}}$
	\WHILE{$convergence = FALSE$}
	  \STATE $local\_statistics\_learning() $
	  \STATE $cost\_function\_MAP() $
	\ENDWHILE
	\STATE $\Phi \gets \Phi_{MAP}$
	\STATE $\Sigma \gets \Sigma_{MAP}$
      \ENDWHILE
    \end{algorithmic}
  \end{algorithm}
* Results of the Experiments
** Segmentation
#+CAPTION: A Comparison of Image Segmentation Algorithms
   #+LABEL:   fig:seg
   #+ATTR_LaTeX: width=6cm,angle=0
   [[./segmentation.jpg]]
** Manual initialization
*** Shadow effects                                             :B_alertblock:
    :PROPERTIES:
    :BEAMER_env: alertblock
    :END:
#+CAPTION: Shadow effects
    #+LABEL:   fig:shadow
    #+ATTR_LaTeX: width=8cm,angle=0
    [[./edge.jpg]]
** Initialization from SIFT Features
*** Tracking initialized from SIFT features                  :B_exampleblock:
    :PROPERTIES:
    :BEAMER_env: exampleblock
    :END:
**** Match SIFT keypoints between the template image and the test image
**** Discard the false matching points using the RANSAC algorithm
**** Compute the homography
**** Transform the contour of the template image onto the test image
**** Apply the CCD tracker to the video

# open source, ros package
* Summary and Future work
** Summary
*** Investigate and implement the CCD approach                      :B_block:
    :PROPERTIES:
    :BEAMER_env: block
    :END:
**** Based on the OpenCV
**** A ROS package: provide a ROS node interface to the ccd class
#+BEGIN_LATEX
\url{http://www.ros.org/wiki/contracting-curve-density}
#+END_LATEX
**** Released under open source BSD license
*** Improvements                                                    :B_block:
    :PROPERTIES:
    :BEAMER_env: block
    :END:
**** B-spline curve and three-dimensional affine shape-space
**** Logistic regression
**** Automated contour initialization methods: SIFT features and point clouds
** Future work
*** Future work                                              :B_exampleblock:
    :PROPERTIES:
    :BEAMER_env: exampleblock
    :END:
**** Use statistics based on other image features instead of the RGB statistics
**** Integration of the CCD algorithm into a more complex tracking framework (e.g. the Lucas-Kanade method (LKM), the extended Kalman  filter (EKF))
**** B-spline can not precisely represent many useful simple curves such as circles and ellipses, thus, Non-uniform rational B-spline (NURBS) is required for the CCD algorithm. 
**** Port to Android system to support mobile applications
**** ....
** Thank you
\setbeamercolor{bgcolor}{fg=black,bg=blue!50}
*** bgcolor                                                :B_beamercolorbox:
    :PROPERTIES:
    :BEAMER_env: beamercolorbox
    :BEAMER_envargs: [rounded=true, shadow=true, wd=10cm]
    :END:
#+begin_center 
\large Thank you for your attention!
#+end_center
** References
#+BEGIN_LATEX
\begin{thebibliography}{10}
\bibitem{prml}[Bishop, 2006]
Christopher M. Bishop
  \newblock Pattern recognition and machine learning
\end{thebibliography}
#+END_LATEX
